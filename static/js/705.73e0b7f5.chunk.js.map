{"version":3,"file":"static/js/705.73e0b7f5.chunk.js","mappings":"0KA2CAA,EAAAA,EAAQC,QAAQC,EAAAA,IAEhB,QAzCoBC,IAAwG,IAAvG,SAAEC,EAAW,CAAC,EAAG,EAAG,GAAE,SAAEC,EAAW,CAAC,EAAG,EAAG,GAAE,MAAEC,EAAQ,EAAC,iBAAEC,EAAgB,UAAEC,EAAS,UAAEC,GAAWN,EAEpH,MAAM,MAAEO,IAAUV,EAAAA,EAAAA,GAAQE,EAAAA,KAE1BS,EAAAA,EAAAA,IAAS,KACP,GAAa,OAATH,QAAS,IAATA,GAAAA,EAAWI,QAAS,CACtB,GAAIH,EAAW,CAGb,MAAMI,EAAkBL,EAAUI,QAAQE,SACtCD,IACFL,EAAUI,QAAQE,SAAW,CAACD,EAAgB,GAAI,EAAGA,EAAgB,IAEzE,CACA,MAAME,EAAMP,EAAUI,QAAQR,SAE9BG,EAAiB,CAACQ,EAAIC,EAAGD,EAAIE,EAAGF,EAAIG,GACtC,KAOF,OAEEC,EAAAA,EAAAA,KAAA,aAEEC,OAAQV,EACRN,SAAUA,EACVC,SAAUA,EACVC,MAAOA,EACPe,YAAU,EACVC,eAAa,GAEf,C","sources":["components/PlayerModel.js"],"sourcesContent":["import { Gltf, useGLTF } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport { ghostModel } from 'some-3d-models'\nimport { RigidBody } from '@react-three/rapier'\nconst PlayerModel = ({ position = [0, 0, 0], rotation = [0, 0, 0], scale = 1, onUpdatePosition, playerRef ,isJumping }) => {\n  // 加载 GLB 模型\n  const { scene } = useGLTF(ghostModel)\n\n  useFrame(() => {\n    if (playerRef?.current) {\n      if (isJumping) {\n        // 假设playerRef.current是一个动态的物理体\n        // 这里你需要根据具体的物理引擎来调整，下面只是一个示例\n        const currentVelocity = playerRef.current.velocity;\n        if (currentVelocity) {  // 确保currentVelocity已定义\n          playerRef.current.velocity = [currentVelocity[0], 5, currentVelocity[2]]; \n      }\n      }\n      const pos = playerRef.current.position\n      // 调用父组件的回调函数更新位置\n      onUpdatePosition([pos.x, pos.y, pos.z])\n    }\n  })\n  const handleModelLoad = (model) => {\n    // Assign the loaded model to your ref\n    if (playerRef) playerRef.current = model.scene\n  }\n\n  return (\n\n    <primitive\n      // ref={playerRef} // 将 ref 绑定到模型\n      object={scene}\n      position={position}\n      rotation={rotation}\n      scale={scale}\n      castShadow\n      receiveShadow\n    />\n    // <Gltf src={ghostModel} position={position} rotation={rotation} scale={scale} castShadow receiveShadow onLoad={handleModelLoad} />\n  )\n}\n\nuseGLTF.preload(ghostModel)\n\nexport default PlayerModel\n"],"names":["useGLTF","preload","ghostModel","_ref","position","rotation","scale","onUpdatePosition","playerRef","isJumping","scene","useFrame","current","currentVelocity","velocity","pos","x","y","z","_jsx","object","castShadow","receiveShadow"],"sourceRoot":""}