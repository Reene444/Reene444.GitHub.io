{"version":3,"file":"static/js/369.bc5453d6.chunk.js","mappings":"6MA8CAA,EAAAA,EAAQC,QAAQC,EAAAA,IAChB,QA1CsBC,IAAgE,IAA/D,SAAEC,EAAW,CAAC,EAAG,EAAG,GAAE,SAAEC,EAAW,CAAC,EAAG,EAAG,GAAE,MAAEC,EAAQ,GAAGH,EAE9E,MAAM,MAAEI,EAAK,WAAEC,IAAeR,EAAAA,EAAAA,GAAQE,EAAAA,IAGhCO,GAAQC,EAAAA,EAAAA,QAAO,OAGf,QAAEC,IAAYC,EAAAA,EAAAA,GAAcJ,EAAYD,GAsB9C,OAnBAM,EAAAA,EAAAA,YAAU,KACJF,IAEFG,QAAQC,IAAI,qBAAsBJ,GAG9BA,EAAQ,aACVA,EAAQ,YAAYK,OAExB,GACC,CAACL,KAGJM,EAAAA,EAAAA,IAAS,KACHR,EAAMS,SACRT,EAAMS,QAAQC,QAChB,KAIAC,EAAAA,EAAAA,KAAA,aACEC,OAAQd,EACRH,SAAUA,EACVC,SAAUA,EACVC,MAAOA,EACPgB,YAAU,EACVC,eAAa,GACb,C","sources":["components/HeliBallModel.js"],"sourcesContent":["\nimport React, { useEffect, useRef } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { HeilBall } from \"some-3d-models\";\nconst HeliBallModel = ({ position = [0, 0, 0], rotation = [0, 0, 0], scale = 1 }) => {\n  // 加载 GLB 文件\n  const { scene, animations } = useGLTF(HeilBall);\n \n  // 创建 AnimationMixer 用于控制动画\n  const mixer = useRef(null);\n\n  // 获取并控制加载的动画\n  const { actions } = useAnimations(animations, scene);\n\n  // 在组件加载时启动动画\n  useEffect(() => {\n    if (actions) {\n      // 打印 actions 中包含的动画名称\n      console.log(\"Available actions:\", actions);\n\n      // 假设 GLB 中的动画名称是 \"Armature|ArmatureAction\"，你需要根据日志中的名称来选择动画\n      if (actions[\"Take 001\"]) {\n        actions[\"Take 001\"].play(); // 播放指定动画\n      }\n    }\n  }, [actions]);\n\n  // 在每帧更新动画，不需要手动调用 update\n  useFrame(() => {\n    if (mixer.current) {\n      mixer.current.update(); // 这里不再需要调用 .update(delta)\n    }\n  });\n\n  return (\n    <primitive\n      object={scene}\n      position={position}\n      rotation={rotation}\n      scale={scale}\n      castShadow\n      receiveShadow\n    />\n  );\n};\nuseGLTF.preload(HeilBall)\nexport default HeliBallModel;\n"],"names":["useGLTF","preload","HeilBall","_ref","position","rotation","scale","scene","animations","mixer","useRef","actions","useAnimations","useEffect","console","log","play","useFrame","current","update","_jsx","object","castShadow","receiveShadow"],"sourceRoot":""}